#!/bin/bash

get_namespaces() {
  # shellcheck disable=SC2153
  [[ -n "${NAMESPACE// /}" ]] \
    && echo "${NAMESPACE}" \
    && return
  git_remote_branches "${WORKING_DIR}" | sed "s~^~$(dirname "$(get_remote_namespace "${WORKING_DIR}")")/~"
}
get_groups() {
  declare group_id
  declare namespace
  for namespace in $(get_namespaces); do
    [[ "${namespace}" =~ ^[a-z0-9]{2,}(/[a-z0-9]{2,})*$ ]] \
      || exception "Unsupported NAMESPACE '${namespace}'" 2
    group_id="$(get_group_id "${namespace}" 2>/dev/null)"
    [[ -z "${group_id}" && "${IGNORE}" == 'false' ]] \
      && exception "Namespace '${namespace}' not found" 3
    echo "${group_id} "
  done
}
measure() {
  acquire_token
  # create output directory if not
  [[ -z "${OUTPUT_DIR}" ]] \
    && OUTPUT_DIR="$(mktemp -d)"
  # shellcheck disable=SC2155
  declare user_projects
  declare group_id
  # shellcheck disable=SC2034
  for group_id in $(get_groups); do
    user_projects="$(get_group_projects)" \
      || exit 1
    # clone all user_projects from ns
    for user_project in ${user_projects}; do
      user_project_ns="$(jq -r '.name_with_namespace' <<< "${user_project}")"
      [[ "$(basename "${user_project_ns}")" != "${PREFIX}"* ]] \
        && continue
      [[ "${DRY_RUN}" == 'true' ]] \
        && continue
      mkdir -p "${OUTPUT_DIR}/${user_project_ns}"
      git_clone "$(get_remote_url "${user_project_ns}")" "${OUTPUT_DIR}/${user_project_ns}"
    done
  done
  [[ "${DRY_RUN}" == 'true' ]] \
    && return
  # allow **/*
  shopt -s globstar
  declare -a basefiles
  for file in "${WORKING_DIR}"/src/main/**/*."${AMS_LANG}"; do
    basefiles+=(-b "${file}")
  done
  # send projects into moss
  moss -l "${AMS_LANG}" "${basefiles[@]}" -d "${OUTPUT_DIR}"/**/src/main/**/*."${AMS_LANG}" \
    "${WORKING_DIR}"/src/main/**/*."${AMS_LANG}"
}

declare -r AMS_LANG='java'
declare IGNORE='false'
declare DRY_RUN='false'
declare PREFIX=''
declare NAMESPACE=''
declare OUTPUT_DIR=''

# get options
declare OPT
OPT="$(getopt --name "${0}" --options 'hinp:s:o:' \
  --longoptions 'ignore,dry-run,help,prefix:,namespace:,output-dir:' \
  -- "$@")" \
  && eval set -- "${OPT}" \
  || exit 1

# process options
while (( $# > 0 )); do
  # shellcheck disable=SC2034
  case "${1}" in
    -h|--help) print_usage && exit 0 ;;
    -i|--ignore) IGNORE='true'; shift ;;
    -n|--dry-run) DRY_RUN='true'; shift ;;
    -p|--prefix) PREFIX="${2}"; shift; shift ;;
    -s|--namespace) NAMESPACE="${NAMESPACE} ${2}"; shift; shift ;;
    -o|--output-dir)
      OUTPUT_DIR="${2}";
      [[ -d "${OUTPUT_DIR}" ]] \
        || mkdir -p "${OUTPUT_DIR}" \
        || exception "Unable to create '${OUTPUT_DIR}' directory"
      shift; shift ;;
    --) shift; break ;;
     *) break ;;
  esac
done

measure
