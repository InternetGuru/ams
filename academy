#!/usr/bin/env bash

set -o pipefail
declare -r SCRIPT='academy'
# shellcheck disable=SC2155
declare -r DIR="$(dirname "${BASH_SOURCE[0]}")"
# shellcheck disable=SC2034
declare -r SRC_DIR='src'
declare CUSTOMIZE=1
# shellcheck disable=SC1091
# shellcheck disable=SC1090
source "${DIR}/commons"
# shellcheck disable=SC1091
source "${DIR}/badges"

customize_academy() {
  (( CUSTOMIZE )) || return
  local CUSTOM_ACADEMY='.academy'
  [[ -d "${CUSTOM_ACADEMY}" ]] \
    || return
  cp "${CUSTOM_ACADEMY}"/* "${DIR}"
}

# shellcheck disable=SC2155
declare WORKING_DIR="$(readlink -f ".")"
(( $# == 0 )) \
  && exception "Missing command, enter '${SCRIPT} help' to display usage" 2
while (( $# > 0 )); do
  case "${1}" in
    -w|--working-dir)
      WORKING_DIR="$(readlink -f "${2}")"
      [[ -d "${WORKING_DIR}" ]] \
        || exception 'WORKING_DIR not found'
      shift 2
      ;;
    -C|--no-customize)
      CUSTOMIZE=0
      shift
      ;;
    help)
      print_usage
      exit
      ;;
    collect|distribute|measure)
      # shellcheck disable=SC1091
      # shellcheck disable=SC1090
      source "${DIR}/git_functions"
      # check requirements
      check_command git jq
      ;&
    evaluate|execute)
      declare -r CMD="${1}"
      shift
      # shellcheck disable=SC1091
      source "${DIR}/gitlab_api"
      customize_academy
      process_user_scripts "${CMD}"
      ;;
    *)
      exception "Invalid command '${1}', enter '${SCRIPT} help' to display usage" 2
      ;;
  esac
done
