#!/usr/bin/env bash

run_io_tests() {
  "${DIR}/iotest" "${IOTEST_FOLDER}" "${1}" | tee "${IOTEST_LOG}"
  declare summary passed count
  summary="$(grep 'Summary:' < "${IOTEST_LOG}" | cut -d ' ' -f2-)"
  count="$(cut -d',' -f1 <<< "${summary}" | cut -d' ' -f2)"
  passed="$(cut -d',' -f3 <<< "${summary}" | cut -d' ' -f3)"
  declare test_color='success'
  [[ ${passed} -lt ${count} ]] \
    && test_color='critical'
  badge_generate 'IO Tests' "${passed}/${count}" "${test_color}"
}
main() {
  declare -r RESULTS="${WORKING_DIR}/.results"
  declare -r ACADEMY_CACHE="${HOME}/.academy"
  mkdir -p "${RESULTS}"
  mkdir -p "${ACADEMY_CACHE}"

  # deprecated
  declare -r BADGES_TXT="${RESULTS}/badges.txt"
  declare -r GENERATED_TXT="${RESULTS}/generated.txt"
  : > "${BADGES_TXT}"

  # jenom pro CI a ten grep je spatne, ACADEMY_EDITABLE neni RE ale SP
  # shellcheck disable=SC2034
  mapfile -t CHANGED_FILES < <(
    git -C "${WORKING_DIR}" diff HEAD..HEAD~1 --name-only 2>/dev/null \
      | grep -E "${ACADEMY_EDITABLE:-.*}"
  )
  # shellcheck disable=SC1090
  [[ -f "${DIR}/pre-evaluate_${ACADEMY_LANG}" ]] \
    && source "${DIR}/pre-evaluate_${ACADEMY_LANG}"

  if [[ -f "${DIR}/evaluate_${ACADEMY_LANG}" ]]; then
    # shellcheck disable=SC1090
    source "${DIR}/evaluate_${ACADEMY_LANG}"
  else
    if [[ -z "${ACADEMY_LANG}" ]]; then
      warning "Undefined ACADEMY_LANG variable. Evaluation skipped."
    else
      exception "Missing evaluate script 'evaluate_${ACADEMY_LANG}' for selected language."
    fi
  fi

  # shellcheck disable=SC1090
  [[ -f "${DIR}/post-evaluate_${ACADEMY_LANG}" ]] \
    && source "${DIR}/post-evaluate_${ACADEMY_LANG}"

  # deprecated
  date +%s > "${GENERATED_TXT}"
  printf -- 'age: %s\n' "$(<"${GENERATED_TXT}")" >> "${BADGES_TXT}"
}

main "$@"
