#!/bin/bash

get_test_color() {
  declare color='brightgreen'
  declare perc="${1}"
  (( perc < 85 )) \
    && color='green'
  (( perc < 70 )) \
    && color='yellow'
  (( perc < 55 )) \
    && color='orange'
  (( perc < 45 )) \
    && color='red'
  echo "${color}"
}
run_io_tests() {
  "${DIR}/iotest" "${IOTEST_FOLDER}" "${1}" > "${IOTEST_LOG}"
  declare summary passed count
  summary="$(grep 'Summary:' < "${IOTEST_LOG}" | cut -d ' ' -f2-)"
  count="$(cut -d',' -f1 <<< "${summary}" | cut -d' ' -f2)"
  passed="$(cut -d',' -f3 <<< "${summary}" | cut -d' ' -f3)"
  declare test_color='success'
  [[ ${passed} -lt ${count} ]] \
    && test_color='critical'
  printf -- '%s/%s' "${passed:-0}" "${count:-0}" > "${IOTEST_TXT}"
  curl -so "${IOTEST_SVG}" "https://img.shields.io/badge/IO%20Tests-${passed}/${count}-${test_color}"
}
customize_evaluation() {
  local CUSTOM_ACADEMY='.academy'
  [[ -d "${CUSTOM_ACADEMY}" ]] \
  || return
  cp -v "${CUSTOM_ACADEMY}"/* "${DIR}"
}
main() {
  declare -r RESULTS="${WORKING_DIR}/.results"
  declare -r BADGES_TXT="${RESULTS}/badges.txt"
  declare -r GENERATED_TXT="${RESULTS}/generated.txt"

  mkdir -p "${RESULTS}"
  : > "${BADGES_TXT}"

  customize_evaluation

  [[ -f "${DIR}/pre-evaluate_${ACADEMY_LANG}" ]] \
  && source "${DIR}/pre-evaluate_${ACADEMY_LANG}"

  if [[ -f "${DIR}/evaluate_${ACADEMY_LANG}" ]]; then
    source "${DIR}/evaluate_${ACADEMY_LANG}"
  else
    exception "Unexpected exception: academy lang should be checked before"
  fi

  [[ -f "${DIR}/post-evaluate_${ACADEMY_LANG}" ]] \
  && source "${DIR}/post-evaluate_${ACADEMY_LANG}"

  date +%s > "${GENERATED_TXT}"
  printf -- 'age: %s\n' "$(<"${GENERATED_TXT}")" >> "${BADGES_TXT}"
}

main "$@"
