
.before_script_global: &global_init |
  # fix TERM
  export TERM=xterm
  # checkout to current branch
  git checkout -B "${CI_COMMIT_REF_NAME}" "${CI_COMMIT_SHA}"
  # set git user
  git config --global user.email "${GITLAB_USER_EMAIL}"
  git config --global user.name "Runner = ${CI_RUNNER_DESCRIPTION}"
  export CA_DIR="$(mktemp -d)"
  # install cad
  revision=$(grep -oP "[^/]+(?=/gitlab-stages)" .gitlab-ci.yml)
  git clone --single-branch --branch ${revision} https://github.com/InternetGuru/ca ${CA_DIR}
  # e.g. /umiami/george/csc220
  declare -r namespace="$(dirname "${PWD}" | cut -d/ -f3-)"
  declare -r project_name="$(basename "${PWD}")"
  # simplify project remote url
  git remote set-url --push origin "${namespace}/${project_name}.git"
  # set permissions
  CA=${CA_DIR}/ca
  chmod +x ${CA_DIR}/*

.before_script_token: &validate_token |
  # prepare acccess token for the distribution script
  if [[ -z "${ACCESS_TOKEN}" ]]; then
    echo "Undefined variable {ACCESS_TOKEN}"
    echo "Refer to README and make sure the current branch is protected."
    exit 1
  fi

.before_script_apt: &apt_requirements |
  # install requirements
  apt update && apt install -y curl jq git

evaluate:
  image: maven:latest
  stage: build
  before_script:
    - *global_init
  cache:
    paths:
      - target/
  script:
    - ${CA} evaluate
  only:
    variables:
      - $CA_EVALUATE
  artifacts:
    paths:
      - .results/
    expire_in: 1 year

distribute:
  image: debian:stretch
  stage: build
  before_script:
    - *validate_token
    - *apt_requirements
    - *global_init
  script:
    # e.g. fall20
    - declare -r branch="$(git rev-parse --abbrev-ref HEAD)"
    # set token file (will be deprecated)
    - echo "${ACCESS_TOKEN}" > ${HOME}/.gitlab_access_token
    # distribute current project among all users
    - |
        ${CA} distribute --update-links --namespace "${namespace}/${branch}" \
        --process-issues "${CA_ISSUES:-${CI_COMMIT_REF_NAME}}" \
        --prefix "${project_name}-" <<< "${CA_USERS}"
  only:
    variables:
      - $CA_DISTRIBUTE
  when: manual

measure:
  image: debian:stretch
  stage: build
  before_script:
    - *validate_token
    - *apt_requirements
    - *global_init
  script:
    - declare namespaces=''
    - declare ignore=''
    # prefix branches by namespace/
    - |
        if [[ -n "${CA_BRANCHES}" ]]; then
          namespaces="$(sed "s~^~${namespace}/~" <<< "$CA_BRANCHES")"
        else
          ignore='--ignore'
        fi
    # download moss script
    - curl -o moss "${CA_MOSSURL}"
    - chmod +x moss
    # run measure for given or all branches
    - ${CA} measure "${ignore}" --namespace "${namespaces}" --prefix "${project_name}-"
  only:
    variables:
      - $CA_MEASURE
  when: manual
